@model EntranceApplicant
@inject ApplicationDbContext _context;
@{
	Layout = "~/Views/Admission/_AdmissionLayout.cshtml";
	ViewData["Title"] = "Supporting Documents";
	int count = 1;
	var unavailableApplicantDocument = await _context.EntranceApplicantDocuments
	.Where(x => x.EntranceApplicantId == Model.Id)
	.Select(x => x.DocumentTypeId).ToListAsync();
	var availableApplicantDocument = await _context.DocumentTypes
		.Where(x => !unavailableApplicantDocument.Contains(x.Id))
		.ToListAsync();
	var entranceApplicantDocuments = await _context.EntranceApplicantDocuments
		.Include(d=>d.DocumentType)
		.Where(d=>d.EntranceApplicantId == Model.Id)
		.ToListAsync();
	var dropdownlist = new SelectList(availableApplicantDocument, "Id", "Name");
	ViewDataDictionary selectList = new ViewDataDictionary(ViewData)
	{
		{"DocumentTypeId", dropdownlist }
	};
}
<div class="container">
	<div class="card">
		<div class="card-header">
			<p>LIST OF SUPPORTING DOCUMENT</p>
		</div>
		<div class="card-body">
			@await Html.PartialAsync("~/Views/Admission/UploadDocument.cshtml", new DocumentUploadViewModel(){ EntranceApplicantId = Model.Id}, selectList)
			<br /><br />
			<div class="table-responsive">
				<table class="table" id="dataTable">
					<thead>
						<tr>
							<th>No.</th>
							<th>Type of Document</th>
							<th>ACTION</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in entranceApplicantDocuments)
						{
							<tr>
								<td>@count</td>
								<td>@item.DocumentType.Name</td>
								<td>
									<form asp-action="DeleteDocument" asp-controller="Admission" method="post">
										<input type="hidden" value="@item.Id" name="Id" />
										<button class="btn btn-sm btn-danger">Delete</button>
									</form>
								</td>
							</tr>
							count++;
						}
					</tbody>
				</table>
			</div>
			<a class="btn btn-danger text-light" asp-action="References">Previous</a> |
			<a class="btn btn-primary text-light" asp-action="UploadPhoto">Next</a>
		</div>
	</div>
	<br />
</div>