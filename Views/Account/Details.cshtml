@using Microsoft.AspNetCore.Identity;
@using Microsoft.EntityFrameworkCore;
@using SmartUni.Data;
@inject ApplicationDbContext _context
@model ApplicationUser
@{
    ViewData["Title"] = "Details";

    var existingGroupId = await _context.UserGroups
        .Where(x => x.UserID == Model.Id)
        .Select(x => x.GroupID)
        .ToListAsync();

    List<Group> unavailableGroups = _context.Groups
        .Where(x => existingGroupId.Contains(x.Id))
        .ToList();

    List<Group> availableGroups = _context.Groups
        .Where(r => !existingGroupId.Contains(r.Id))
       .ToList();

    var selectList = new SelectList(availableGroups, "Id", "Name");
    ViewDataDictionary viewData = new ViewDataDictionary(ViewData)
    {
        { "GroupId", selectList },
    };
    int count = 1;
}
<div class="container">
    <div class="card">
        <div class="card-header">Details</div>
        <div class="card-body">
            @if (TempData["Message"] != null)
            {
                <script>
                    alert('@TempData["Message"]');
                    @{
                        TempData.Remove("Message");
                    }
                </script>
            }
            <div class="container">
                <div class="row">
                    <div class="col-md-4">
                        <img src="~/usersphoto/@Model.ImageUrl" alt="User Image" class="card-img" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    List of Groups (Assigned)
                </div>
                <div class="card-body">
                    @await Html.PartialAsync("~/Views/Account/AddUserToGroup.cshtml", new UserGroupViewModel { UserID = Model.Id }, viewData)
                    <br /><br />
                    <div class="table-responsive">
                        <table class="table" id="dataTable">
                            <thead>
                                <tr>
                                    <th>No.</th>
                                    <th>Name</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach(var group in unavailableGroups)
                                {
                                    <tr>
                                        <td>@count</td>
                                        <td>@group.Name</td>
                                        <td>
                                            <form>
                                                <button class="btn btn-danger">Remove</button>
                                            </form>
                                        </td>
                                    </tr>
                                    count++;
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
