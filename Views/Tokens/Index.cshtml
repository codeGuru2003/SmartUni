@model IEnumerable<SmartUni.Models.Token>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var count = 1;
}

<div class="container">
    <p>
        @await Html.PartialAsync("~/Views/Tokens/Create.cshtml", new Token())
    </p>
    <div class="card">
        <div class="card-header">Token List</div>
        <div class="card-body text-light" style="background:darkblue;">
            <div class="table-responsive">
                <table class="table nowrap text-light" id="dataTable">
                    <thead>
                        <tr>
                            <th>No.</th>
                            <th>
                                @Html.DisplayNameFor(model => model.ReferenceNo)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Value)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.HasEntered)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.DateEntered)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ExpirationDate)
                            </th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@count</td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ReferenceNo)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Value)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.HasEntered)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DateEntered)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ExpirationDate)
                                </td>
                                <td>
                                    <a asp-action="Edit" class="btn btn-warning" asp-route-id="@item.Id">Edit</a> |
                                    <a asp-action="Details" class="btn btn-primary" asp-route-id="@item.Id">Details</a> |
                                    <a asp-action="Delete" class="btn btn-danger" asp-route-id="@item.Id">Delete</a>
                                </td>
                            </tr>
                            count++;
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<br />